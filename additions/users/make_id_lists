#!/usr/bin/env python3

import pwd
import spwd
import grp
import rich

group_info = [{'gr_name': g.gr_name, 'gr_passwd': g.gr_passwd, 'gr_gid': g.gr_gid, 'gr_mem': g.gr_mem } for g in grp.getgrall() if g.gr_gid > 999]
group_info_sorted = sorted(group_info, key = lambda t: int(t['gr_gid']))

shadow_info_list = spwd.getspall()
def get_user_sinfo(user):
    for j in shadow_info_list:
        if j.sp_namp == user: return j

user_info_list = []
for user_info in pwd.getpwall():
    if user_info.pw_uid < 1000: continue
    user_dict = dict()
    for i in dir(user_info):
        if not i.startswith('pw_'): continue
        user_dict[i] = getattr(user_info, i)

    user_sinfo = get_user_sinfo(user_info.pw_name)
    for j in dir(user_sinfo):
        if not j.startswith('sp_'): continue
        user_dict[j] = getattr(user_sinfo, j)
    user_info_list.append(user_dict)
user_list_sorted = sorted(user_info_list, key = lambda t: int(t['pw_uid']))


with open('user_group_info.yml', 'w') as yml:
    yml.write('---\n')
    yml.write('group_details:\n')
    for g in group_info_sorted:
        yml.write(f'  - {{ name: {g["gr_name"]}, gid: {g["gr_gid"]} }}\n')
    yml.write('\n')
    yml.write('user_details:\n')
    for u in user_list_sorted:
        yml.write(f'  - {{ name: {u["pw_name"]}, uid: {u["pw_uid"]}, gid: {u["pw_gid"]}, shell: {u["pw_shell"]}, home: {u["pw_dir"]}, hash: {u["sp_pwdp"]} }}\n')

#rich.print(user_list_sorted)

